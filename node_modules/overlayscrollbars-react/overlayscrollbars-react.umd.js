(function(s,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("react"),require("overlayscrollbars")):typeof define=="function"&&define.amd?define(["exports","react","overlayscrollbars"],e):(s=typeof globalThis<"u"?globalThis:s||self,e(s.OverlayScrollbarsReact={},s.React,s.OverlayScrollbarsGlobal))})(this,function(s,e,y){"use strict";const E=()=>{if(typeof window>"u"){const t=()=>{};return[t,t]}let i,c;const n=window,l=typeof n.requestIdleCallback=="function",f=n.requestAnimationFrame,a=n.cancelAnimationFrame,o=l?n.requestIdleCallback:f,d=l?n.cancelIdleCallback:a,u=()=>{d(i),a(c)};return[(t,r)=>{u(),i=o(l?()=>{u(),c=f(t)}:t,typeof r=="object"?r:{timeout:2233})},u]},O=i=>{const{options:c,events:n,defer:l}=i||{},[f,a]=e.useMemo(E,[]),o=e.useRef(null),d=e.useRef(l),u=e.useRef(c),t=e.useRef(n);return e.useEffect(()=>{d.current=l},[l]),e.useEffect(()=>{const{current:r}=o;u.current=c,y.OverlayScrollbars.valid(r)&&r.options(c||{},!0)},[c]),e.useEffect(()=>{const{current:r}=o;t.current=n,y.OverlayScrollbars.valid(r)&&r.on(n||{},!0)},[n]),e.useEffect(()=>()=>{var r;a(),(r=o.current)==null||r.destroy()},[]),e.useMemo(()=>[r=>{const b=o.current;if(y.OverlayScrollbars.valid(b))return;const v=d.current,S=u.current||{},m=t.current||{},p=()=>o.current=y.OverlayScrollbars(r,S,m);v?f(p,v):p()},()=>o.current],[])},I=(i,c)=>{const{element:n="div",options:l,events:f,defer:a,children:o,...d}=i,u=n,t=e.useRef(null),r=e.useRef(null),[b,v]=O({options:l,events:f,defer:a});return e.useEffect(()=>{const{current:S}=t,{current:m}=r;return S&&m&&b({target:S,elements:{viewport:m,content:m}}),()=>{var p;return(p=v())==null?void 0:p.destroy()}},[b,n]),e.useImperativeHandle(c,()=>({osInstance:v,getElement:()=>t.current}),[]),e.createElement(u,{"data-overlayscrollbars-initialize":"",ref:t,...d},e.createElement("div",{"data-overlayscrollbars-contents":"",ref:r},o))},w=e.forwardRef(I);s.OverlayScrollbarsComponent=w,s.useOverlayScrollbars=O,Object.defineProperty(s,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=overlayscrollbars-react.umd.js.map
